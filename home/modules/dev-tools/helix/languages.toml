# ------------------------------------------------- Language servers -------------------------------------------------
[language-server.scls]
command = "simple-completion-language-server"

[language-server.scls.config]
max_completion_items = 10     # set max completion results len for each group: words, snippets, unicode-input
snippets_first = true
feature_words = true
feature_snippets = true
feature_unicode_input = false

[language-server.scls.environment]
RUST_LOG = "info,simple-completion-language-server=info"
LOG_FILE = "/dev/null"

[language-server.taplo]
command = "taplo"
args = ["lsp", "stdio"]
environment = { RUST_LOG = "error" }

[language-server.typos]
command = "typos-lsp"
config.diagnosticSeverity = "Hint" # Valid values: Error, Warning, Info or Hint.

# Helix sends LSP config object to the server in both 'initialize' and 'workspace/didChangeConfiguration' requests
# Thus it can contain configuration for both contexts, see: https://github.com/helix-editor/helix/pull/1684
# Metals configuration options are documented here: https://scalameta.org/metals/docs/integrations/new-editor/#metals-user-configuration
[language-server.metals]
command = "metals"
environment = { "SBT_TPOLECAT_DEV" = "1" }

[language-server.metals.config]
isHttpEnabled = true
icons = "unicode"

[language-server.metals.config.metals]
autoImportBuild = "all"
showImplicitArguments = true
showImplicitConversionsAndClasses = true
showInferredType = true
superMethodLensesEnabled = true

[language-server.metals.config.metals.inlayHints]
inferredTypes.enable = true
typeParameters.enable = false
hintsInPatternMatch.enable = true
implicitArguments.enable = true
implicitConversions.enable = false


[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

# Configuration reference: https://github.com/microsoft/vscode-eslint?tab=readme-ov-file#settings-options
[language-server.eslint.config]
validate = "on"
run = "onType"
workingDirectory.mode = "location"
experimental = { useFlatConfig = true }
format.enable = false
nodePath = ""

# Rules/actions/reporting configuration
rulesCustomizations = [{ rule = "*", severity = "warn" }]
codeActionOnSave.enable = false
codeAction.disableRuleComment = { enable = true, location = "separateLine" }
codeAction.showDocumentation.enable = true
problems = { shortenToSingleLine = true }


[language-server.terraform-ls]
command = "terraform-ls"
args = ["serve", "-log-file", "/dev/null"]

[language-server.buf-lsp]
command = "buf"
args = ["beta", "lsp"]
environment = { "BUF_BETA_SUPPRESS_WARNINGS" = "1" }

[language-server.nixd]
command = "nixd"
args = ["--log=error"]

# ----------------------------------------------------- Languages -----------------------------------------------------

[[language]]
name = "csv"
file-types = ["csv"]
scope = "source.csv"

[[grammar]]
name = "csv"
source = { git = "https://github.com/weartist/rainbow-csv-tree-sitter", rev = "d3dbf916446131417e4c2ea9eb8591b23b466d27" }

[[language]]
name = "css"
formatter = { command = "prettier", args = ["--stdin-filepath ", "dummy.css"] }
auto-format = true
language-servers = ["vscode-css-language-server", "scls", "typos"]

[[language]]
name = "docker-compose"
language-servers = [
  "docker-compose-langserver",
  "yaml-language-server",
  "scls",
  "typos",
]

[[language]]
name = "env"
language-servers = ["scls", "typos"]

[[language]]
name = "fish"
auto-format = false
language-servers = ["fish-lsp", "scls", "typos"]

[[language]]
name = "hcl"
auto-format = true
formatter = { command = "terraform", args = ["fmt", "-"] }
language-servers = ["terraform-ls", "scls", "typos"]

[[language]]
name = "html"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.html"] }
auto-format = true
language-servers = ["vscode-html-language-server", "scls", "typos"]

[[language]]
name = "java"
auto-format = true

[[language]]
name = "javascript"
roots = ["package.json"]
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.js"] }
auto-format = true
language-servers = ["typescript-language-server", "eslint", "scls", "typos"]

[[language]]
name = "json"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.json"] }
auto-format = true
language-servers = ["vscode-json-language-server", "scls", "typos"]

[[language]]
name = "lua"
auto-format = true

[[language]]
name = "markdown"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.md"] }
auto-format = true
language-servers = ["marksman", "scls", "typos"]

[[language]]
name = "nix"
formatter = { command = "nixfmt", args = ["--width", "120"] }
auto-format = true
language-servers = ["nixd", "nil", "scls", "typos"]

[[language]]
name = "prisma"
auto-format = true
language-servers = ["prisma-language-server", "scls", "typos"]

[[language]]
name = "protobuf"
language-servers = ["protols", "scls", "typos"]

[[language]]
name = "python"
formatter = { command = "black", args = ["--quiet", "-"] }
auto-format = true
language-servers = ["pylsp", "scls", "typos"]

[[language]]
name = "scala"
auto-format = true
language-servers = ["metals", "scls", "typos"]

[[language]]
name = "scss"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.scss"] }
auto-format = true
language-servers = ["vscode-css-language-server", "scls", "typos"]

[[language]]
name = "sql"
formatter = { command = "pg_format", args = ["--wrap-limit", "140"] }
auto-format = false
language-servers = ["scls", "typos"]

[[language]]
name = "toml"
auto-format = true
language-servers = ["taplo", "scls", "typos"]

[[language]]
name = "typescript"
roots = ["package.json"]
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.ts"] }
auto-format = true
language-servers = ["typescript-language-server", "eslint", "scls", "typos"]

[[language]]
name = "tsx"
auto-format = true
language-servers = ["typescript-language-server", "eslint", "scls", "typos"]

[[language]]
name = "xml"
auto-format = true
language-servers = ["vscode-html-language-server", "scls", "typos"]

[[language]]
name = "jsx"
auto-format = true
language-servers = ["typescript-language-server", "eslint", "scls", "typos"]

[[language]]
name = "yaml"
formatter = { command = "prettier", args = ["--stdin-filepath", "dummy.yaml"] }
auto-format = true
language-servers = ["yaml-language-server", "scls", "typos"]
